{"version":3,"sources":["constants/index.js","reducers/todos.js","reducers/index.js","actions/index.js","containers/Input.js","components/Todo.js","components/TodoList.js","containers/List.js","App.js","serviceWorker.js","index.js"],"names":["ACTION","ADD_TODO","TOGGLE_TODO","DELETE_TODO","SET_EDIT","CANCEL_EDIT","UPDATE_TODO","saveTodo","list","id","localStorage","setItem","toString","JSON","stringify","todos","state","arguments","length","undefined","lx","getItem","parse","getInitialState","action","type","concat","Object","toConsumableArray","text","completed","isEdit","editText","map","todo","objectSpread","filter","combineReducers","lastid","Input","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","trim","addTodo","react_default","a","createElement","className","onSubmit","name","onChange","placeholder","disabled","Component","connect","dispatch","Todo","handleKeyPress","key","deleteTodo","stopPropagation","editTodo","updateTodo","cancelEditTodo","_this$props","toggleComplete","onClick","style","textDecoration","onKeyPress","TodoList","components_Todo","App","Fragment","containers_Input","List","Boolean","window","location","hostname","match","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ec9e9e1.chunk.js","sourcesContent":["export const ACTION = {\r\n  ADD_TODO: 'ADD_TODO',\r\n  TOGGLE_TODO: 'TOGGLE_TODO',\r\n  DELETE_TODO: 'DELETE_TODO',\r\n  SET_EDIT: 'SET_EDIT',\r\n  CANCEL_EDIT: 'CANCEL_EDIT',\r\n  UPDATE_TODO: 'UPDATE_TODO'\r\n}","import { ACTION } from '../constants';\r\n\r\nlet initialState = [];\r\n\r\nfunction getInitialState() {\r\n  let lx = localStorage.getItem('todos');\r\n  if (!lx) {\r\n    initialState = [];\r\n  }\r\n\r\n  else {\r\n    initialState = JSON.parse(lx);\r\n  }\r\n\r\n  return initialState;\r\n}\r\n\r\nfunction saveTodo(list, id) {\r\n  if (id) {\r\n    localStorage.setItem('lastid', id.toString());\r\n  }\r\n\r\n  localStorage.setItem('todos', JSON.stringify(list));\r\n}\r\n\r\nfunction todos(state = getInitialState(), action) {\r\n  if (action.type === ACTION.ADD_TODO) {\r\n    let list = [\r\n      ...state,\r\n      {\r\n        id: action.id,\r\n        text: action.text,\r\n        completed: false,\r\n        isEdit: false,\r\n        editText: action.text\r\n      }\r\n    ];\r\n    saveTodo(list, action.id);\r\n    return list;\r\n  }\r\n\r\n  else if (action.type === ACTION.TOGGLE_TODO) {\r\n    let list = state.map(todo =>\r\n      todo.id === action.id ? { ...todo, completed: !todo.completed } : todo);\r\n    saveTodo(list);\r\n    return list;\r\n  }\r\n\r\n  else if (action.type === ACTION.DELETE_TODO) {\r\n    let list = state.filter(todo => todo.id !== action.id);\r\n    saveTodo(list);\r\n    return list;\r\n  }\r\n\r\n  else if (action.type === ACTION.SET_EDIT) {\r\n    let list = state.map(todo => \r\n      todo.id === action.id ? { ...todo, isEdit: action.isEdit } : todo);\r\n    saveTodo(list);\r\n    return list;\r\n  }\r\n\r\n  else if (action.type === ACTION.CANCEL_EDIT) {\r\n    let list = state.map(todo => \r\n      todo.id === action.id ? { ...todo, isEdit: action.isEdit } : todo);\r\n    saveTodo(list);\r\n    return list;\r\n  }\r\n\r\n  else if (action.type === ACTION.UPDATE_TODO) {\r\n    let list = state.map(todo =>\r\n      todo.id === action.id ? { ...todo, isEdit: action.isEdit, text: action.text, editText: action.text } : todo);\r\n    saveTodo(list);\r\n    return list;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default todos;","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\n\r\nexport default combineReducers({\r\n  todos\r\n});","import { ACTION } from '../constants';\r\n\r\nlet lastid = 0;\r\n\r\nfunction getLastId() {\r\n  let id = localStorage.getItem('lastid');\r\n  if (!id) {\r\n    lastid = 0;\r\n  }\r\n\r\n  return ++lastid;\r\n}\r\n\r\nexport function addTodo(text) {\r\n  return {\r\n    type: ACTION.ADD_TODO,\r\n    id: getLastId(),\r\n    text: text\r\n  }\r\n}\r\n\r\nexport function toggleComplete(id) {\r\n  return {\r\n    type: ACTION.TOGGLE_TODO,\r\n    id: id\r\n  }\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n  return {\r\n    type: ACTION.DELETE_TODO,\r\n    id: id\r\n  }\r\n}\r\n\r\nexport function editTodo(id) {\r\n  return {\r\n    type: ACTION.SET_EDIT,\r\n    id: id,\r\n    isEdit: true\r\n  }\r\n}\r\n\r\nexport function cancelEditTodo(id) {\r\n  return {\r\n    type: ACTION.CANCEL_EDIT,\r\n    id: id,\r\n    isEdit: false\r\n  }\r\n}\r\n\r\nexport function updateTodo(id, text) {\r\n  return {\r\n    type: ACTION.UPDATE_TODO,\r\n    id: id,\r\n    isEdit: false,\r\n    text: text\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../actions';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addTodo: todo => dispatch(addTodo(todo))\r\n  };\r\n}\r\n\r\nclass Input extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo: ''\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!this.state.todo.trim()) return;\r\n    this.props.addTodo(this.state.todo);\r\n    this.setState({ todo: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-md-12 input-group\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"todo\"\r\n                name=\"todo\"\r\n                value={this.state.todo}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Type in a new todo...\" \r\n                className=\"form-control\"\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button type=\"submit\" disabled={this.state.todo === ''} className=\"btn btn-primary\">Add Todo</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: this.props.text\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === 'Enter') {\r\n      this.saveTodo();\r\n    }\r\n  }\r\n\r\n  deleteTodo = e => {\r\n    e.stopPropagation();\r\n    this.props.deleteTodo();\r\n  }\r\n\r\n  editTodo = e => {\r\n    e.stopPropagation();\r\n    this.props.editTodo();\r\n  }\r\n\r\n  saveTodo = () => {\r\n    if (!this.state.text.trim()) return;\r\n    this.props.updateTodo(this.state.text);\r\n    this.props.cancelEditTodo();\r\n  }\r\n\r\n  cancelEditTodo = () => {\r\n    this.setState({ text: this.props.text });\r\n    this.props.cancelEditTodo();\r\n  }\r\n\r\n  render() {\r\n    const { toggleComplete, isEdit, completed, text } = this.props;\r\n    return (\r\n      <li className=\"list-group-item\">\r\n        {!isEdit && (\r\n          <div onClick={toggleComplete} style={{\r\n            textDecoration: completed ? 'line-through' : 'none'\r\n            }}>\r\n            <div className=\"mr-2 d-inline\">{text}</div>\r\n            <div className=\"float-right\">\r\n              <button onClick={this.deleteTodo} className=\"btn btn-danger mr-2\">Delete</button>\r\n              <button onClick={this.editTodo} className=\"btn btn-success\">Edit</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {isEdit && (\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.text}\r\n                onChange={this.handleChange}\r\n                onKeyPress={this.handleKeyPress}\r\n                placeholder=\"title\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"col-sm-4\">\r\n              <button onClick={this.saveTodo} disabled={this.state.text === ''} className=\"btn btn-success mr-2\">Save</button>\r\n              <button onClick={this.cancelEditTodo} className=\"btn btn-secondary\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass TodoList extends Component {\r\n\r\n  render() {\r\n    const { todos, toggleComplete, deleteTodo, editTodo, updateTodo, cancelEditTodo } = this.props;\r\n    if (!todos.length) {\r\n      return (\r\n        <div className=\"alert alert-info\">\r\n          <div className=\"text-center\">Your TO-DO is empty</div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    else {\r\n      return (\r\n        <ul className=\"list-group\">\r\n          {\r\n            todos.map(todo => (\r\n              <Todo key={todo.id}\r\n                text={todo.text}\r\n                editText={todo.editText}\r\n                isEdit={todo.isEdit}\r\n                completed={todo.completed}\r\n                toggleComplete={() => toggleComplete(todo.id)}\r\n                deleteTodo={() => deleteTodo(todo.id)}\r\n                editTodo={() => editTodo(todo.id)}\r\n                updateTodo={(text) => updateTodo(todo.id, text)}\r\n                cancelEditTodo={() => cancelEditTodo(todo.id)}\r\n              />\r\n            ))\r\n          }\r\n        </ul>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default TodoList;","import { connect } from 'react-redux';\r\nimport { toggleComplete, deleteTodo, editTodo, updateTodo, cancelEditTodo } from '../actions';\r\nimport TodoList from '../components/TodoList';\r\n\r\nfunction getTodos(todos) {\r\n  return todos;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    todos: getTodos(state.todos)\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    toggleComplete: id => dispatch(toggleComplete(id)),\r\n    deleteTodo: id => dispatch(deleteTodo(id)),\r\n    editTodo: id => dispatch(editTodo(id)),\r\n    updateTodo: (id, text) => dispatch(updateTodo(id, text)),\r\n    cancelEditTodo: id => dispatch(cancelEditTodo(id))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);","import React from 'react';\nimport Input from './containers/Input';\nimport List from './containers/List';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <h1 className=\"text-center mt-2\">To-Do App</h1>\n      <Input />\n      <List />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport './custom.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}